import subprocess
import time
import argparse

def capture_zigbee_traffic(interface, capture_file, capture_duration):
    """
    Captures Zigbee traffic for a specified duration and saves it to a file.
    
    Args:
    - interface (str): The interface to capture from (e.g., 'zb0').
    - capture_file (str): The file to save the capture to.
    - capture_duration (int): The duration to capture for in seconds.
    """
    print(f"Starting Zigbee capture on interface {interface} for {capture_duration} seconds...")
    capture_command = ['zbdump', '-i', interface, '-w', capture_file]
    process = subprocess.Popen(capture_command)
    time.sleep(capture_duration)
    process.terminate()
    print(f"Capture complete. Saved to {capture_file}")

def replay_zigbee_traffic(interface, capture_file):
    """
    Replays Zigbee traffic from a capture file.
    
    Args:
    - interface (str): The interface to replay from (e.g., 'zb0').
    - capture_file (str): The capture file to replay.
    """
    print(f"Replaying Zigbee traffic from file {capture_file} on interface {interface}...")
    replay_command = ['zbreplay', '-f', capture_file, '-i', interface]
    subprocess.run(replay_command)
    print("Replay complete.")

def inject_custom_packet(interface, channel, dest_address, src_address, payload):
    """
    Injects a custom Zigbee packet.
    
    Args:
    - interface (str): The interface to inject from (e.g., 'zb0').
    - channel (int): The Zigbee channel to use.
    - dest_address (str): The destination address.
    - src_address (str): The source address.
    - payload (str): The payload to inject.
    """
    print(f"Injecting custom Zigbee packet on channel {channel} from {src_address} to {dest_address} with payload: {payload}")
    inject_command = [
        'zbfake',
        '-c', str(channel),
        '-i', interface,
        '-d', dest_address,
        '-s', src_address,
        '-p', payload
    ]
    subprocess.run(inject_command)
    print("Packet injection complete.")

def main():
    parser = argparse.ArgumentParser(description="Zigbee Traffic Capture and Injection Tool")
    parser.add_argument('--interface', type=str, required=True, help="The interface to use (e.g., 'zb0')")
    parser.add_argument('--capture-file', type=str, required=True, help="The file to save the capture to")
    parser.add_argument('--capture-duration', type=int, required=True, help="The duration to capture traffic (in seconds)")
    parser.add_argument('--channel', type=int, required=True, help="The Zigbee channel to use for injecting packets")
    parser.add_argument('--dest-address', type=str, required=True, help="The destination address for the custom packet")
    parser.add_argument('--src-address', type=str, required=True, help="The source address for the custom packet")
    parser.add_argument('--payload', type=str, required=True, help="The payload to inject")

    args = parser.parse_args()

    # Capture Zigbee traffic
    capture_zigbee_traffic(args.interface, args.capture_file, args.capture_duration)

    # Replay the captured traffic
    replay_zigbee_traffic(args.interface, args.capture_file)

    # Inject a custom Zigbee packet
    inject_custom_packet(args.interface, args.channel, args.dest_address, args.src_address, args.payload)

if __name__ == "__main__":
    main()
